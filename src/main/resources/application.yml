server:
  servlet:
    context-path: /phoenix
  port: 80
  address: 0.0.0.0
  tomcat:
    uri-encoding: UTF-8
    max-connections: 100
    threads:
      max: 100
      min-spare: 10
  compression:
    enabled: true
    mime-types: text/html, text/xml, text/plain, text/css, text/javascript, application/javascript, application/json
    excluded-user-agents: image/jpeg, image/png, video/mp4

#fileLocation: E:/file/
fileLocation: /home/phoenix/file/
mailList: 1120965621@qq.com

spring:
  application:
    name: backend

  #  rabbitmq:
  #    host: 127.0.0.1
  #    port: 5672
  #    username: admin
  #    password: admin
  #    virtual-host: /
  #    publisher-confirms: true
  #    publisher-returns: true
  #    template:
  #      mandatory: true


  mvc:
    static-path-pattern: /**      #这个配置是默认配置

  resources:
    # 资源缓存时间，单位秒
    cache:
      cachecontrol:
        max-age: 604800
    chain:
      cache: true
      compressed: true
    static-locations: classpath:/META-INF/resources/,classpath:/resources/, classpath:/static/, file:${spring.servlet.multipart.location}
    #需要把自定义的路径添加到static-locations后面,原本的静态访问路径也要加上不然原本的静态资源会访问不到。
    #访问时直接在访问路径上加上profile之后的路径，例如profile中有文件stuImg/test.jpg，则访问路径为localhost/stuImg/test.jpg

  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
      file-size-threshold: 0
      #这里是访问项目外文件夹的关键
      location: /home/static

  thymeleaf:
    prefix: classpath:/templates/
  #数据源配置
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/phoenix?useAffectedRows=true&useSSL=false&serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=UTF8
    #    &allowPublicKeyRetrieval=true
    username: root
    password: krcmAiter3#H
    #    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      auto-commit: true
      minimum-idle: 2
      maximum-pool-size: 10
      connection-timeout: 10000
      max-lifetime: 600000
      idle-timeout: 60000
      validation-timeout: 1000
      leak-detection-threshold: 30000
    #热部署生效
  devtools:
    restart:
      enabled: true
      #设置重启的目录
      additional-paths: src/main/
  aop:
    auto: true
    proxy-target-class: true

logging:
  level:
    root: info

#  kafka:
#    bootstrap-servers: 192.168.0.197:9092
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#    consumer:
#      group-id: test
#      enable-auto-commit: true
#      auto-commit-interval: 1000
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

mybatis:
  #实体类所做包
  type-aliases-package: com.ay.demo.entity
  #mapper.xml所在位置
  mapper-locations: classpath:com.sparkle.mapper.xml/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    call-setters-on-nulls: true

#dubbo:
#  #dubbo协议配置
#  protocol:
#    name: dubbo
#    port: 8081
#  #dubbo注册中心地址
#  registry:
#    address: zookeeper://localhost:2181
#  #扫描dubbo组件的基本包
#  scan:
#    base-packages: com.sparkle.service.Impl

#无需拦截的相关请求资源
interceptor-config:
  login-interceptor-exclude-path:
    - /user/login/**
    - /user/logout
    - /login
    - /static/**
    - /*.css
    - /*.js
    - /index/**
    - /photoWall
    - /photo/**
    - /rabbitmq/**
    - /header.html
    - /footer.html
    - /picture/**
    - /*.jpg
    - /*.png
    - /favicon.ico
    - /kafka/send
    - /file/**